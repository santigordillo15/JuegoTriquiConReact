{"version":3,"sources":["index.js"],"names":["Square","className","onClick","props","this","value","React","Component","Board","i","squares","renderSquare","Game","state","history","Array","fill","NextIsX","stepNumber","slice","squaresNew","length","calculateWinner","setState","concat","step","status","current","winner","console","log","moves","map","item","index","descripcion","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"gNAMMA,E,4JACJ,WAAU,IAAD,OACP,OACE,wBAAQC,UAAU,SAClBC,QAAS,kBAAI,EAAKC,MAAMD,WADxB,SAEGE,KAAKD,MAAME,Y,GALCC,IAAMC,WAWrBC,E,kKAoBJ,SAAaC,GAAI,IAAD,OACd,OACA,cAACT,EAAD,CAAQK,MAAOD,KAAKD,MAAMO,QAAQD,GAClCP,QAAS,kBAAI,EAAKC,MAAMD,QAAQO,Q,oBAIlC,WAEE,OACE,gCAEE,sBAAKR,UAAU,YAAf,UACGG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKV,UAAU,YAAf,UACGG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKV,UAAU,YAAf,UACGG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,a,GA7CTL,IAAMC,WAoDpBK,E,kDAEJ,WAAYT,GAAO,IAAD,8BAChB,cAAMA,IACDU,MAAO,CACVC,QAAU,CAAC,CACTJ,QAASK,MAAM,GAAGC,KAAK,QAEzBC,SAAU,EACVC,WAAW,GAPG,E,+CAWlB,SAAYT,GACV,IAAMK,EAAWV,KAAKS,MAAMC,QAAQK,MAAM,EAAEf,KAAKS,MAAMK,WAAW,GAE5DE,EADUN,EAAQA,EAAQO,OAAS,GACdX,QAAQS,QAC/BG,EAAgBF,IAAeA,EAAWX,KAG9CW,EAAWX,GAAGL,KAAKS,MAAMI,QAAU,IAAI,IACvCb,KAAKmB,SAAS,CACTT,QAASA,EAAQU,OAAO,CACtBd,QAAQU,MAGfhB,KAAKmB,SAAS,CAACN,SAASb,KAAKS,MAAMI,UACnCb,KAAKmB,SAAS,CAACL,WAAWJ,EAAQO,Y,oBAGpC,SAAOI,GACLrB,KAAKmB,SAAS,CACZL,WAAYO,EACZR,QAAUQ,EAAO,IAAO,M,oBAK5B,WAAU,IAIJC,EAJG,OACDZ,EAAWV,KAAKS,MAAMC,QACtBa,EAAUb,EAAQV,KAAKS,MAAMK,YAC7BU,EAASN,EAAgBK,EAAQjB,SAGvCmB,QAAQC,IAAIhB,GAEZ,IAAMiB,EAAQjB,EAAQkB,KAAI,SAACC,EAAKC,GAC9B,IAAMC,EAAcD,EAClB,eAAiBA,EACjB,aACF,OACE,6BACE,wBAAQhC,QAAS,kBAAM,EAAKkC,OAAOF,IAAnC,SAA4CC,KADrCD,MAWb,OAJER,EADEE,EACO,cAAeA,EAEhB,iBAAkBxB,KAAKS,MAAMI,QAAU,IAAI,KAGnD,sBAAKhB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACO,EAAD,CAAQE,QAASiB,EAAQjB,QACzBR,QAAS,SAACO,GAAD,OAAK,EAAK4B,YAAY5B,QAGjC,sBAAKR,UAAU,YAAf,UACE,8BAAOyB,IACP,6BAAKK,c,GAvEIzB,IAAMC,WAuFzB,SAASe,EAAgBZ,GAWvB,IAVA,IAAM4B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA7B,EAAI,EAAGA,EAAI6B,EAAMjB,OAAQZ,IAAK,CACrC,kBAAkB6B,EAAM7B,GAAxB,GAAO8B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI/B,EAAQ6B,IAAM7B,EAAQ6B,KAAO7B,EAAQ8B,IAAM9B,EAAQ6B,KAAO7B,EAAQ+B,GACpE,OAAO/B,EAAQ6B,GAGnB,OAAO,KAvBTG,IAASC,OACP,cAAC/B,EAAD,IACAgC,SAASC,eAAe,W","file":"static/js/main.867d5062.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n//import reportWebVitals from './reportWebVitals';\n\nclass Square extends React.Component {\n  render() {\n    return (\n      <button className=\"square\" //recibiendo una funcion por props\n      onClick={()=>this.props.onClick()}> \n        {this.props.value} \n      </button>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  // constructor(props){\n  //   super(props);\n  //   this.state={\n  //     squares: Array(9).fill(null), //creamos un array de 9 elementos\n  //     NextIsX : true\n\n  //   }\n  // };\n\n  // handleClick(i){\n  //   const squaresNew = this.state.squares.slice(); //creamos un copia del array\n  //   if (calculateWinner(squaresNew) || squaresNew[i]) {\n  //     return;\n  //   }\n  //   squaresNew[i]=this.state.NextIsX ? \"X\":\"O\"; //modificamos el valor en la posicion (i)\n  //   this.setState({squares:squaresNew}) ;//actualizamos state.squares\n  //   this.setState({NextIsX:!this.state.NextIsX})\n    \n  // };\n  renderSquare(i) {\n    return (\n    <Square value={this.props.squares[i]}\n    onClick={()=>this.props.onClick(i)} //pasando funciones por medio de props\n    />);\n  }\n\n  render() {\n    \n    return (\n      <div>\n        \n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state ={\n      history : [{\n        squares: Array(9).fill(null),\n      }],\n      NextIsX : true,\n      stepNumber:0\n      };\n  };\n\n  handleClick(i){\n    const history  = this.state.history.slice(0,this.state.stepNumber+1);//slice(inicio, fin) fin no incluido\n    const current = history[history.length - 1];\n    const squaresNew = current.squares.slice(); //creamos un copia del array\n    if (calculateWinner(squaresNew) || squaresNew[i]) {\n      return;\n    }\n    squaresNew[i]=this.state.NextIsX ? \"X\":\"O\"; //modificamos el valor en la posicion (i)\n    this.setState({\n         history: history.concat({\n           squares:squaresNew})\n       });                 //usando spread operator {history: [...history, { squares:squaresNew } ]}\n                      \n    this.setState({NextIsX:!this.state.NextIsX});\n    this.setState({stepNumber:history.length})\n    \n  };\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      NextIsX: (step % 2) === 0,\n    });\n  };\n\n\n  render() {\n    const history  = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    let status;\n\n    console.log(history)\n\n    const moves = history.map((item,index) => {\n      const descripcion = index ?\n        'Go to move #' + index :\n        'start Game';\n      return (\n        <li key={index}>\n          <button onClick={() => this.jumpTo(index)}>{descripcion}</button>\n        </li>\n      );\n    });\n    \n    if (winner) {\n      status = 'Winner is: '+ winner;\n    }else{\n     status = 'Next player: '+ (this.state.NextIsX ? \"X\":\"O\");\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board  squares={current.squares}\n          onClick={(i)=>this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{ status }</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n      \n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n//funcion que calcula el ganador\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null; //return de la funcion\n}\n"],"sourceRoot":""}